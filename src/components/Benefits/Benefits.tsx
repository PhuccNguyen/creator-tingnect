'use client';

import React from 'react';
import { motion } from 'framer-motion';
import { 
  Gift, 
  Rocket,
  Megaphone,
  Sparkles,
  ArrowRight
} from 'lucide-react';
import styles from './Benefits.module.css';

const Benefits: React.FC = () => {
  const handleRegisterClick = () => {
    window.open('https://forms.gle/H3k58Cj1k7YWpSum9', '_blank');
  };

  const benefits = [
    {
      icon: Gift,
      emoji: 'üéÅ',
      title: 'Th∆∞·ªüng N√≥ng Ti·ªÅn M·∫∑t',
      value: '50.000 VNƒê',
      description: 'Th∆∞·ªüng ngay 50K ti·ªÅn m·∫∑t v√†o V√≠ Creator c·ªßa b·∫°n ngay sau khi ƒëƒÉng k√Ω ƒë∆∞·ª£c duy·ªát.',
      color: '#F59E0B'
    },
    {
      icon: Rocket,
      emoji: 'üöÄ',
      title: 'G√≥i Vote Kh·ªüi ƒê·ªông',
      value: '200.000 VNƒê',
      description: 'T·∫∑ng 200 l∆∞·ª£t vote (tr·ªã gi√° 200K) l√†m "v·ªën" ƒë·ªÉ b·∫°n t·∫°o ƒë√† chi·∫øn d·ªãch ho·∫∑c t·∫∑ng cho fan.',
      color: '#10B981'
    },
    {
      icon: Megaphone,
      emoji: 'üì¢',
      title: 'G√≥i H·ªó Tr·ª£ Truy·ªÅn Th√¥ng',
      value: '5.950.000 VNƒê',
      description: 'Creator xu·∫•t s·∫Øc s·∫Ω ƒë∆∞·ª£c vinh danh v√† qu·∫£ng b√° tr√™n c√°c k√™nh media ch√≠nh th·ª©c c·ªßa TingVote.',
      color: '#3B82F6'
    },
    {
      icon: Sparkles,
      emoji: 'üíé',
      title: 'Voucher Gi·∫£m 98% - G√≥i Tool AI & Kho√° H·ªçc',
      value: '33.288.000 VNƒê',
      description: 'T·∫∑ng Voucher gi·∫£m 98% ƒë·ªÉ b·∫°n mua g√≥i Tool AI + Kho√° h·ªçc (gi√° g·ªëc 33.97 tri·ªáu) ch·ªâ c√≤n 689K.',
      details: [
        'üé® S√°ng t·∫°o n·ªôi dung: Canva Pro, Global GPT (24 AI), Midjourney, Click AI, 1minAI...',
        'üé¨ Gi√°o d·ª•c & Gi·∫£i tr√≠: ChatGPT, Capcut Pro, Netflix, Spotify, Youtube Premium...',
        'üìö Kho t√†i li·ªáu (T·∫∑ng): 15.000+ kho√° h·ªçc, 1000+ t√†i li·ªáu AI, 1 tri·ªáu+ t√†i li·ªáu t·ªïng h·ª£p...'
      ],
      color: '#8B5CF6'
    }
  ];

  return (
    <section className={styles.benefits}>
      <div className={styles.container}>
        {/* PH·∫¶N A: Gi·ªõi thi·ªáu Creator Lab */}
        <motion.div 
          className={styles.introSection}
          initial={{ opacity: 0, y: 30 }}
          whileInView={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.8 }}
          viewport={{ once: true }}
        >
          <motion.div 
            className={styles.badge}
            initial={{ opacity: 0, scale: 0.8 }}
            whileInView={{ opacity: 1, scale: 1 }}
            transition={{ duration: 0.6, delay: 0.2 }}
            viewport={{ once: true }}
          >
            <Sparkles size={16} />
            <span>Gi·ªõi thi·ªáu ch∆∞∆°ng tr√¨nh</span>
          </motion.div>

          <motion.h2 
            className={styles.title}
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8, delay: 0.3 }}
            viewport={{ once: true }}
          >
            <span className={styles.highlight}>Creator Lab</span> l√† g√¨?
          </motion.h2>

          <motion.p 
            className={styles.description}
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8, delay: 0.4 }}
            viewport={{ once: true }}
          >
            Ch∆∞∆°ng tr√¨nh d√†nh cho t·∫•t c·∫£ nh·ªØng ai y√™u th√≠ch s√°ng t·∫°o n·ªôi dung, mong mu·ªën ph√°t tri·ªÉn th∆∞∆°ng hi·ªáu c√° nh√¢n, m·ªü r·ªông c·ªông ƒë·ªìng v√† <span className={styles.accent}>tƒÉng thu nh·∫≠p th·ª±c t·ª´ l∆∞·ª£t vote c√≥ tr·∫£ ph√≠</span> tr√™n TingVote.
          </motion.p>
        </motion.div>

        {/* PH·∫¶N B: Ch·ª©ng Minh G√≥i 39.5 Tri·ªáu */}
        <motion.div 
          className={styles.packageSection}
          initial={{ opacity: 0, y: 30 }}
          whileInView={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.8, delay: 0.3 }}
          viewport={{ once: true }}
        >
          <h3 className={styles.packageTitle}>
            G√≥i Quy·ªÅn L·ª£i 39.5 Tri·ªáu Bao G·ªìm Nh·ªØng G√¨?
          </h3>
          <p className={styles.packageDescription}>
            ƒê√¢y l√† 4 quy·ªÅn l·ª£i c·ªët l√µi b·∫°n nh·∫≠n ƒë∆∞·ª£c ngay khi tham gia. <span className={styles.totalValue}>(T·ªïng gi√° tr·ªã: 39.488.000 VNƒê)</span>
          </p>
        </motion.div>

        {/* Benefits Grid */}
        <div className={styles.benefitsGrid}>
          {benefits.map((benefit, index) => {
            const Icon = benefit.icon;
            const isSpecial = index === 3; // Card cu·ªëi c√πng ƒë·∫∑c bi·ªát
            
            return (
              <motion.div
                key={index}
                className={`${styles.benefitCard} ${isSpecial ? styles.benefitCardSpecial : ''}`}
                initial={{ opacity: 0, y: 30 }}
                whileInView={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.6, delay: 0.5 + (index * 0.1) }}
                viewport={{ once: true }}
                whileHover={{ y: -8, scale: 1.02 }}
              >
                <div className={styles.benefitIconWrapper}>
                  <div className={styles.benefitIcon} style={{ backgroundColor: `${benefit.color}20` }}>
                    <span className={styles.benefitEmoji}>{benefit.emoji}</span>
                  </div>
                </div>
                
                <div className={styles.benefitContent}>
                  <h3 className={styles.benefitTitle}>{benefit.title}</h3>
                  <span 
                    className={styles.benefitValue}
                    style={{ backgroundColor: benefit.color }}
                  >
                    {benefit.value}
                  </span>
                  <p className={styles.benefitDescription}>{benefit.description}</p>
                  
                  {benefit.details && (
                    <ul className={styles.benefitDetails}>
                      {benefit.details.map((detail, idx) => (
                        <li key={idx}>{detail}</li>
                      ))}
                    </ul>
                  )}
                </div>
              </motion.div>
            );
          })}
        </div>

        {/* CTA Section - Nh·∫•n M·∫°nh 39 Tri·ªáu */}
        <motion.div 
          className={styles.ctaSection}
          initial={{ opacity: 0, y: 30 }}
          whileInView={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.8, delay: 0.9 }}
          viewport={{ once: true }}
        >
          <div className={styles.ctaCard}>
            <div className={styles.ctaIconCircle}>
              <Gift size={36} />
            </div>
            <h3 className={styles.ctaTitle}>
              S·∫µn s√†ng nh·∫≠n <span className={styles.ctaHighlight}>G√≥i 39 Tri·ªáu</span>?
            </h3>
            <p className={styles.ctaText}>
              ƒêƒÉng k√Ω ngay ƒë·ªÉ k√≠ch ho·∫°t to√†n b·ªô quy·ªÅn l·ª£i v√† b·∫Øt ƒë·∫ßu ki·∫øm ti·ªÅn t·ª´ n·ªôi dung s√°ng t·∫°o!
            </p>
            
            <motion.button
              className={styles.ctaButton}
              onClick={handleRegisterClick}
              whileHover={{ scale: 1.05, y: -3 }}
              whileTap={{ scale: 0.95 }}
            >
              <Gift size={24} />
              <div className={styles.ctaButtonContent}>
                <span className={styles.ctaButtonMain}>ƒêƒÇNG K√ù NGAY</span>
                <span className={styles.ctaButtonSub}>Nh·∫≠n G√≥i 39 Tri·ªáu</span>
              </div>
              <ArrowRight size={22} />
            </motion.button>
          </div>
        </motion.div>
      </div>
    </section>
  );
};

export default Benefits;