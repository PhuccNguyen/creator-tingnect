'use client';

import React, { useState } from 'react';
import { motion, AnimatePresence } from 'framer-motion';
import { 
  ChevronDown, 
  HelpCircle, 
  MessageCircle, 
  Mail,
  Gift,
  Percent,
  Users,
  Smartphone,
  CreditCard,
  Infinity,
  ExternalLink
} from 'lucide-react';
import styles from './FAQ.module.css';

const FAQ: React.FC = () => {
  const [activeIndex, setActiveIndex] = useState<number | null>(0);

  const handleContactClick = () => {
    window.open('https://forms.gle/H3k58Cj1k7YWpSum9', '_blank');
  };

  const faqs = [
    {
      icon: Gift,
      emoji: 'üéÅ',
      question: 'Khi n√†o t√¥i nh·∫≠n ƒë∆∞·ª£c th∆∞·ªüng 50.000ƒë?',
      answer: 'Ngay sau khi ho√†n t·∫•t ƒëƒÉng k√Ω qua Google Form v√† x√°c nh·∫≠n qua fanpage TingVote. B·∫°n ch·ªâ c·∫ßn g·ª≠i tin nh·∫Øn ƒë·∫øn fanpage v·ªõi th√¥ng tin ƒëƒÉng k√Ω ƒë·ªÉ nh·∫≠n th∆∞·ªüng.',
      color: '#E7C873'
    },
    {
      icon: Percent,
      emoji: 'üí∞',
      question: 'L√†m sao ƒë·ªÉ nh·∫≠n chia th∆∞·ªüng 20%?',
      answer: 'H·ªá th·ªëng t·ª± ƒë·ªông t√≠nh v√† ph√¢n b·ªï 20% doanh thu t·ª´ l∆∞·ª£t vote c√≥ tr·∫£ ph√≠ v√†o v√≠ Creator c·ªßa b·∫°n. B·∫°n kh√¥ng c·∫ßn l√†m g√¨ th√™m, ch·ªâ c·∫ßn t·∫≠p trung s√°ng t·∫°o n·ªôi dung v√† thu h√∫t l∆∞·ª£t vote.',
      color: '#10B981'
    },
    {
      icon: Users,
      emoji: 'üë•',
      question: 'T√¥i ch∆∞a c√≥ nhi·ªÅu ng∆∞·ªùi theo d√µi, c√≥ th·ªÉ tham gia kh√¥ng?',
      answer: 'Ho√†n to√†n c√≥ th·ªÉ! Creator Labs ch√†o ƒë√≥n m·ªçi c√° nh√¢n y√™u th√≠ch s√°ng t·∫°o, d√π l√† ng∆∞·ªùi m·ªõi hay Creator chuy√™n nghi·ªáp. Ch√∫ng t√¥i s·∫Ω h·ªó tr·ª£ b·∫°n ph√°t tri·ªÉn t·ª´ ƒë·∫ßu.',
      color: '#2AF4FF'
    },
    {
      icon: Smartphone,
      emoji: 'üì±',
      question: 'T√¥i c·∫ßn chu·∫©n b·ªã g√¨ tr∆∞·ªõc khi ƒëƒÉng k√Ω?',
      answer: 'B·∫°n ch·ªâ c·∫ßn c√≥ t√†i kho·∫£n m·∫°ng x√£ h·ªôi (Facebook, TikTok, Instagram ho·∫∑c YouTube), ƒëam m√™ s√°ng t·∫°o n·ªôi dung v√† s·∫µn s√†ng h·ªçc h·ªèi. Ph·∫ßn c√≤n l·∫°i, TingVote s·∫Ω h·ªó tr·ª£ b·∫°n!',
      color: '#8B5CF6'
    },
    {
      icon: CreditCard,
      emoji: 'üí≥',
      question: 'T√¥i c√≥ th·ªÉ r√∫t ti·ªÅn th∆∞·ªüng nh∆∞ th·∫ø n√†o?',
      answer: 'S·ªë ti·ªÅn th∆∞·ªüng s·∫Ω ƒë∆∞·ª£c chuy·ªÉn v√†o v√≠ c·ªßa b·∫°n. B·∫°n c√≥ th·ªÉ r√∫t ti·ªÅn theo chu k·ª≥ thanh to√°n ƒë·ªãnh k·ª≥ c·ªßa h·ªá th·ªëng ho·∫∑c khi ƒë·∫°t ng∆∞·ª°ng t·ªëi thi·ªÉu.',
      color: '#F59E0B'
    },
    {
      icon: Infinity,
      emoji: '‚ôæÔ∏è',
      question: 'C√≥ gi·ªõi h·∫°n v·ªÅ s·ªë l∆∞·ª£ng n·ªôi dung t√¥i c√≥ th·ªÉ t·∫°o kh√¥ng?',
      answer: 'Kh√¥ng c√≥ gi·ªõi h·∫°n! B·∫°n c√†ng s√°ng t·∫°o nhi·ªÅu n·ªôi dung ch·∫•t l∆∞·ª£ng, c√†ng c√≥ nhi·ªÅu c∆° h·ªôi thu h√∫t vote v√† tƒÉng thu nh·∫≠p. TingVote khuy·∫øn kh√≠ch s·ª± s√°ng t·∫°o kh√¥ng gi·ªõi h·∫°n.',
      color: '#DC2626'
    }
  ];

  const toggleFAQ = (index: number) => {
    setActiveIndex(activeIndex === index ? null : index);
  };

  return (
    <section className={styles.faq}>
      <div className={styles.container}>
        {/* Header */}
        <motion.div 
          className={styles.header}
          initial={{ opacity: 0, y: 30 }}
          whileInView={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.8 }}
          viewport={{ once: true }}
        >
          <motion.div 
            className={styles.badge}
            initial={{ opacity: 0, scale: 0.8 }}
            whileInView={{ opacity: 1, scale: 1 }}
            transition={{ duration: 0.6, delay: 0.2 }}
            viewport={{ once: true }}
          >
            <HelpCircle size={16} />
            <span>FAQ</span>
          </motion.div>

          <motion.h2 
            className={styles.title}
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8, delay: 0.3 }}
            viewport={{ once: true }}
          >
            C√¢u h·ªèi{' '}
            <span className={styles.highlight}>th∆∞·ªùng g·∫∑p</span>
          </motion.h2>

          <motion.p 
            className={styles.description}
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8, delay: 0.4 }}
            viewport={{ once: true }}
          >
            X·ª≠ l√Ω c√°c r√†o c·∫£n v√† th·∫Øc m·∫Øc cu·ªëi c√πng c·ªßa b·∫°n
          </motion.p>
        </motion.div>

        {/* FAQ List */}
        <div className={styles.faqList}>
          {faqs.map((faq, index) => {
            const Icon = faq.icon;
            return (
              <motion.div
                key={index}
                className={`${styles.faqItem} ${activeIndex === index ? styles.active : ''}`}
                initial={{ opacity: 0, y: 30 }}
                whileInView={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.6, delay: 0.5 + (index * 0.1) }}
                viewport={{ once: true }}
                whileHover={{ y: -2 }}
                onClick={() => toggleFAQ(index)}
              >
                <div className={styles.faqQuestion}>
                  <div className={styles.questionLeft}>
                    <div 
                      className={styles.questionIcon}
                      style={{ backgroundColor: `${faq.color}15` }}
                    >
                      <Icon size={16} style={{ color: faq.color }} />
                      <span className={styles.questionEmoji}>{faq.emoji}</span>
                    </div>
                    <h3 className={styles.questionText}>{faq.question}</h3>
                  </div>
                  
                  <ChevronDown 
                    className={`${styles.chevronIcon} ${activeIndex === index ? styles.rotate : ''}`}
                    size={20}
                  />
                </div>
                
                <AnimatePresence>
                  {activeIndex === index && (
                    <motion.div
                      className={styles.faqAnswer}
                      initial={{ opacity: 0, height: 0 }}
                      animate={{ opacity: 1, height: 'auto' }}
                      exit={{ opacity: 0, height: 0 }}
                      transition={{ duration: 0.3 }}
                    >
                      <p>{faq.answer}</p>
                    </motion.div>
                  )}
                </AnimatePresence>
              </motion.div>
            );
          })}
        </div>

        {/* Contact Section */}
        <motion.div 
          className={styles.contactSection}
          initial={{ opacity: 0, y: 30 }}
          whileInView={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.8, delay: 0.8 }}
          viewport={{ once: true }}
        >
          <div className={styles.contactCard}>
            <MessageCircle className={styles.contactIcon} size={32} />
            
            <h3 className={styles.contactTitle}>
              V·∫´n c√≤n th·∫Øc m·∫Øc?
            </h3>
            
            <p className={styles.contactText}>
              ƒê·ªôi ng≈© TingVote lu√¥n s·∫µn s√†ng h·ªó tr·ª£ b·∫°n 24/7
            </p>

            <div className={styles.contactActions}>
              <motion.button
                className={styles.contactButton}
                onClick={handleContactClick}
                whileHover={{ scale: 1.05, y: -2 }}
                whileTap={{ scale: 0.95 }}
              >
                <span>ƒêƒÉng k√Ω v√† h·ªèi ngay</span>
                <ExternalLink size={16} />
              </motion.button>

              <div className={styles.contactInfo}>
                <Mail size={16} />
                <span>contact@tingvote.com</span>
              </div>
            </div>
          </div>
        </motion.div>
      </div>
    </section>
  );
};

export default FAQ;